<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.banque</groupId>
  <!-- ATTENTION : artifactId = context root -->
  <artifactId>en14.spring.mvc.rest</artifactId>
  <!-- Nous sommes en projet WEB -->
  <packaging>war</packaging>
  <version>1.0.0</version>

  <developers>
    <developer>
      <id>rf</id>
      <name>Ferret Renaud</name>
      <email>renaud91@gmail.com</email>
      <url>http://ferretrenaud.fr</url>
    </developer>
    <developer>
      <id>kb</id>
      <name>Brifault Karine</name>
      <email>karine.brifault@gmail.com</email>
    </developer>
    <developer>
      <id>av</id>
      <name>Adrien Vossough</name>
      <email>adrienvossough@gmail.com</email>
      <url>https://semifir.com/</url>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Simple Machines License</name>
      <url>http://www.simplemachines.org/about/smf/license.php</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.source>1.6</jdk.source>
    <jdk.target>1.6</jdk.target>

    <version.mysql>5.1.44</version.mysql>
    <!-- En J2EE 6 -->
    <version.javaee-web-api>6.0</version.javaee-web-api>
    <!-- La JSTL -->
    <version.jstl>1.2</version.jstl>
    <version.junit>4.12</version.junit>
    <version.log4j>1.2.17</version.log4j>
    <version.aspectj>1.7.4</version.aspectj>
    <version.dbcp>1.4</version.dbcp>
    <!-- Attention : Spring 3.2.18 ne sait pas faire au dela de cet version 
      d'hibernate (4.2.21.Final) Pour obtenir ce genre d'information il suffit 
      de regarder dans le fichier pom.xml du projet spring-orm http://maven.springframework.org/release/org/springframework/spring-orm/3.2.18.RELEASE/ -->
    <version.hibernate>4.2.21.Final</version.hibernate>
    <version.spring>3.2.18.RELEASE</version.spring>
    <version.netsfjson>2.4</version.netsfjson>

    <!-- https://maven.apache.org/plugins/index.html -->
    <maven-compiler-plugin-version>3.7.0</maven-compiler-plugin-version>
    <maven-war-plugin-version>3.1.0</maven-war-plugin-version>
    <maven-surefire-plugin-version>2.20</maven-surefire-plugin-version>

    <!-- Sonar -->
    <sonar.java.source>${jdk.source}</sonar.java.source>
    <sonar.language>java</sonar.language>
    <sonar.sourceEncoding>${project.build.sourceEncoding}</sonar.sourceEncoding>
    <sonar.import_unknown_files>true</sonar.import_unknown_files>
    <sonar.junit.reportsPath>${basedir}/target/surefire-reports</sonar.junit.reportsPath>

  </properties>

  <build>
    <!-- Afin d'avoir un WAR qui porte le nom de l'artefact id -->
    <!-- Sans qu'il ajoute automatiquement le numero de version -->
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin-version}</version>
        <configuration>
          <source>${jdk.source}</source>
          <target>${jdk.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin-version}</version>
        <configuration>
          <additionalProjectFacets>
            <!-- Pour Eclipse -->
            <java>${jdk.target}</java>
            <jst.web>3.0</jst.web>
          </additionalProjectFacets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin-version}</version>
      </plugin>

    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>

      <!-- Afin d'éviter d'indiquer tous les éléments du Spring -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${version.spring}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${version.log4j}</version>
      </dependency>

      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${version.dbcp}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${version.hibernate}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging</artifactId>
        <version>3.3.0.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging-annotations</artifactId>
        <version>2.0.2.Final</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>
    <!-- Pour pouvoir lancer nos tests unitaire DAO+service il nous faut cette dépendance -->
    <dependency>
      <groupId>org.glassfish.main.extras</groupId>
      <artifactId>glassfish-embedded-all</artifactId>
      <version>3.1.2.2</version>
      <scope>test</scope>
    </dependency>  
  
    <!-- En J2EE 6 -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-web-api</artifactId>
      <version>${version.javaee-web-api}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${version.jstl}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${version.aspectj}</version>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <!-- JUnit se place toujours avec un scope en test -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${version.mysql}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>${version.netsfjson}</version>
      <classifier>jdk15</classifier>
    </dependency>


  </dependencies>
  <description>Spring MVC en mode web services (sans JSP/Servlet)
Avec Hibernate 4.
On ne fait pas usage de Jackson dans cet exemple.
Pour les tests unitaires, utilisation du RestTemplate. Ennoncés.</description>
</project>